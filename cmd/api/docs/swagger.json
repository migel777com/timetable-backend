{
    "swagger": "2.0",
    "info": {
        "description": "Swagger API for gin backend template.",
        "title": "gin-api-template Swagger API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/files/upload/{fileName}": {
            "post": {
                "description": "Send as binary file and write name of the file in the URL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Uploading files",
                "parameters": [
                    {
                        "description": "File data",
                        "name": "file",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.File"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    }
                }
            }
        },
        "/healthcheck": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves application status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/data.Healthcheck"
                        }
                    }
                }
            }
        },
        "/users/login/email": {
            "post": {
                "description": "Send email and pass to get JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Auth via Email",
                "parameters": [
                    {
                        "description": "Login data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.LoginUserViaEmail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/data.SimplePayload"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/data.LoginUserViaEmailValidationError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    }
                }
            }
        },
        "/users/register/new": {
            "post": {
                "description": "Send all data about user, except photo_id. Plz exclude id, createdTime and photo_id fields in request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "User creation",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.RegisterUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/data.RegisterUserValidationError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    }
                }
            }
        },
        "/users/userdata": {
            "get": {
                "description": "use JWT token to identify users email and respond with data related to  this user",
                "produces": [
                    "application/json"
                ],
                "summary": "Get user data with get request",
                "parameters": [
                    {
                        "description": "Login data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/data.LoginUserViaEmail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/data.SimplePayload"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.SimpleError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "data.File": {
            "type": "object",
            "properties": {
                "createdTime": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "data.Healthcheck": {
            "type": "object",
            "properties": {
                "environment": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "data.LoginUserViaEmail": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "data.LoginUserViaEmailValidationError": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/data.LoginUserViaEmail"
                }
            }
        },
        "data.RegisterUser": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "data.RegisterUserValidationError": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/data.RegisterUser"
                }
            }
        },
        "data.SimplePayload": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "string"
                }
            }
        },
        "main.SimpleError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        }
    }
}